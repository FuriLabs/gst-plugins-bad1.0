From: Jim Hodapp <jim.hodapp@canonical.com>
Date: Tue, 14 Oct 2014 14:56:57 -0400
Subject: [PATCH] Handle more rotation transformation matrices

Origin: vendor
Forwarded: no

diff --git a/gst/isomp4/qtdemux.c b/gst/isomp4/qtdemux.c
index ae1491e..33c0141 100644
--- a/gst/isomp4/qtdemux.c
+++ b/gst/isomp4/qtdemux.c
@@ -3516,15 +3516,15 @@ gst_qtdemux_activate_segment (GstQTDemux * qtdemux, QtDemuxStream * stream,
       stream->to_sample = G_MAXUINT32;
       GST_DEBUG_OBJECT (qtdemux, "moving data pointer to %" GST_TIME_FORMAT
           ", index: %u, pts %" GST_TIME_FORMAT, GST_TIME_ARGS (start), index,
-          GST_TIME_ARGS (gst_util_uint64_scale (stream->
-                  samples[index].timestamp, GST_SECOND, stream->timescale)));
+          GST_TIME_ARGS (gst_util_uint64_scale (stream->samples[index].
+                  timestamp, GST_SECOND, stream->timescale)));
     } else {
       index = gst_qtdemux_find_index_linear (qtdemux, stream, stop);
       stream->to_sample = index;
       GST_DEBUG_OBJECT (qtdemux, "moving data pointer to %" GST_TIME_FORMAT
           ", index: %u, pts %" GST_TIME_FORMAT, GST_TIME_ARGS (stop), index,
-          GST_TIME_ARGS (gst_util_uint64_scale (stream->
-                  samples[index].timestamp, GST_SECOND, stream->timescale)));
+          GST_TIME_ARGS (gst_util_uint64_scale (stream->samples[index].
+                  timestamp, GST_SECOND, stream->timescale)));
     }
   } else {
     GST_DEBUG_OBJECT (qtdemux, "No need to look for keyframe, "
@@ -3619,8 +3619,8 @@ gst_qtdemux_prepare_current_sample (GstQTDemux * qtdemux,
   if (G_UNLIKELY (stream->segment_index != seg_idx))
     gst_qtdemux_activate_segment (qtdemux, stream, seg_idx, time_position);
 
-  if (G_UNLIKELY (QTSEGMENT_IS_EMPTY (&stream->
-              segments[stream->segment_index]))) {
+  if (G_UNLIKELY (QTSEGMENT_IS_EMPTY (&stream->segments[stream->
+                  segment_index]))) {
     QtDemuxSegment *seg = &stream->segments[stream->segment_index];
 
     GST_LOG_OBJECT (qtdemux, "Empty segment activated,"
@@ -7192,6 +7192,17 @@ qtdemux_inspect_transformation_matrix (GstQTDemux * qtdemux,
                                        (m)[3] == (d << 16) && (m)[4] == (e << 16) && \
                                        (m)[6] == (g << 16) && (m)[7] == (h << 16))
 
+  const float inv2exp16 = 1.0f / (float) (1 << 16);
+  const float inv2exp30 = 1.0f / (float) (1 << 30);
+
+  /* Print out the normalized transformation matrix */
+  GST_DEBUG_OBJECT (qtdemux, "%.2f %.2f %.2f", ((int) (matrix[0]) * inv2exp16),
+      ((int) (matrix[1]) * inv2exp16), ((int) (matrix[2]) * inv2exp30));
+  GST_DEBUG_OBJECT (qtdemux, "%.2f %.2f %.2f", ((int) (matrix[3]) * inv2exp16),
+      ((int) (matrix[4]) * inv2exp16), ((int) (matrix[5]) * inv2exp30));
+  GST_DEBUG_OBJECT (qtdemux, "%.2f %.2f %.2f", ((int) (matrix[6]) * inv2exp16),
+      ((int) (matrix[7]) * inv2exp16), ((int) (matrix[8]) * inv2exp30));
+
   /* only handle the cases where the last column has standard values */
   if (matrix[2] == 0 && matrix[5] == 0 && matrix[8] == 1 << 30) {
     const gchar *rotation_tag = NULL;
@@ -7200,13 +7211,16 @@ qtdemux_inspect_transformation_matrix (GstQTDemux * qtdemux,
     if (QTCHECK_MATRIX (matrix, 1, 0, 0, 1, 0, 0)) {
       /* NOP */
     } else if (QTCHECK_MATRIX (matrix, 0, 1, G_MAXUINT16, 0,
-            stream->display_height, 0)) {
+            stream->display_height, 0) ||
+        QTCHECK_MATRIX (matrix, 0, 1, G_MAXUINT16, 0, 0, 0)) {
       rotation_tag = "rotate-90";
     } else if (QTCHECK_MATRIX (matrix, G_MAXUINT16, 0, 0, G_MAXUINT16,
-            stream->display_width, stream->display_height)) {
+            stream->display_width, stream->display_height) ||
+        QTCHECK_MATRIX (matrix, G_MAXUINT16, 0, 0, G_MAXUINT16, 0, 0)) {
       rotation_tag = "rotate-180";
     } else if (QTCHECK_MATRIX (matrix, 0, G_MAXUINT16, 1, 0, 0,
-            stream->display_width)) {
+            stream->display_width) ||
+        QTCHECK_MATRIX (matrix, 0, G_MAXUINT16, 1, 0, 0, 0)) {
       rotation_tag = "rotate-270";
     } else {
       GST_FIXME_OBJECT (qtdemux, "Unhandled transformation matrix values");
